<?xml version="1.0" encoding="UTF-8"?>

<project name="XMPPServer" default="default" basedir=".">
    <description>Builds, tests, and runs the project XMPPServer.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <target name="package-for-store" depends="jar">
        
        <property name="store.jar.name" value="${ant.project.name}"/>
        <property name="store.dir" value="store"/>
        <property name="store.jar" value="${store.dir}/${store.jar.name}.jar"/>

        <echo message="${ant.project.name} NUM ÚNICO EM JAR EM: ${store.jar}"/>
        
        <delete dir="${store.dir}"/>
        <mkdir dir="${store.dir}"/>

        <jar destfile="${store.dir}/temp_final.jar" filesetmanifest="skip">
            <zipgroupfileset dir="dist" includes="*.jar"/>
            <zipgroupfileset dir="dist/lib" includes="*.jar"/>

            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>

        <zip destfile="${store.jar}">
            <zipfileset src="${store.dir}/temp_final.jar" excludes="META-INF/*.SF, META-INF/*.DSA, META-INF/*.RSA"/>
        </zip>

        <delete file="${store.dir}/temp_final.jar"/>
        
<!--      <property name="java.home.path" value="C:\Program Files\Java\jdk1.8.0_66"/>
        <property name="proguard.jar.path" value="${basedir}/dist/proguard.jar"/>
        
        <taskdef resource="proguard/ant/task.properties" classpath="${proguard.jar.path}" />
        
        <echo message="OFUSCAÇÃO ${dist.jar}..."/>
        
        <mkdir dir="${build.dir}/obfuscated"/>
        <proguard printmapping="${build.dir}/obfuscated/${ant.project.name}.map" renamesourcefileattribute="SourceFile" ignorewarnings="true">
            
            <injar  file="${store.jar}"/>
            <outjar file="${build.dir}/obfuscated/${ant.project.name}.jar"/>
            
            <libraryjar path="${javac.classpath}"/>            
            <libraryjar file="${java.home.path}/jre/lib/rt.jar"/>
            
             Keep some useful attributes. 

            <keepattribute name="InnerClasses"/>
            <keepattribute name="SourceFile"/>
            <keepattribute name="LineNumberTable"/>
            <keepattribute name="Deprecated"/>
            <keepattribute name="*Annotation*"/>
            <keepattribute name="Signature"/>
            
             Preserve all public classes, and their public and protected fields and methods. 

            <keep access="public">
                <field  access="public protected"/>
                <method access="public protected"/>
            </keep>
            
            
             Preserve all .class method names. 

            <keepclassmembernames access="public">
                <method type      ="java.lang.Class"
                        name      ="class$"
                        parameters="java.lang.String"/>
                <method type      ="java.lang.Class"
                        name      ="class$"
                        parameters="java.lang.String,boolean"/>
            </keepclassmembernames>
            
             Preserve all native method names and the names of their classes. 

            <keepclasseswithmembernames>
                <method access="native" />
            </keepclasseswithmembernames>
            
             Preserve the methods that are required in all enumeration classes. 

            <keepclassmembers extends="java.lang.Enum">
                <method access="public static"
                        type="**[]"
                        name="values"
                        parameters="" />
                <method access="public static"
                        type="**"
                        name="valueOf"
                        parameters="java.lang.String"/>
            </keepclassmembers>
            
             Explicitly preserve all serialization members. The Serializable
            interface is only a marker interface, so it wouldn't save them.
            You can comment this out if your library doesn't use serialization.
            With this code serializable classes will be backward compatible 

            <keepnames implements="java.io.Serializable"/>
            <keepclassmembers implements="java.io.Serializable">
                <field  access    ="final"
                        type      ="long"
                        name      ="serialVersionUID"/>
                <field  access    ="!static !transient"
                        name      ="**"/>
                <field  access    ="!private"
                        name      ="**"/>
                <method access    ="!private"
                        name      ="**"/>
                <method access    ="private"
                        type      ="void"
                        name      ="writeObject"
                        parameters="java.io.ObjectOutputStream"/>
                <method access    ="private"
                        type      ="void"
                        name      ="readObject"
                        parameters="java.io.ObjectOutputStream"/>
                <method type      ="java.lang.Object"
                        name      ="writeReplace"
                        parameters=""/>
                <method type      ="java.lang.Object"
                        name      ="readResolve"
                        parameters=""/>
            </keepclassmembers>
        </proguard> -->
    </target>
</project>
